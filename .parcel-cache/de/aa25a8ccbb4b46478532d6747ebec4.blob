var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _App = require('./../../App');
var _AppDefault = _parcelHelpers.interopDefault(_App);
var _litHtml = require('lit-html');
require('./../../Router');
var _Auth = require('./../../Auth');
var _AuthDefault = _parcelHelpers.interopDefault(_Auth);
var _Utils = require('./../../Utils');
var _UtilsDefault = _parcelHelpers.interopDefault(_Utils);
var _UserAPI = require('./../../UserAPI');
var _UserAPIDefault = _parcelHelpers.interopDefault(_UserAPI);
var _Toast = require('../../Toast');
var _ToastDefault = _parcelHelpers.interopDefault(_Toast);
var _moment = require('moment');
var _momentDefault = _parcelHelpers.interopDefault(_moment);
class EditProfileView {
  init() {
    console.log('EditProfileView.init');
    document.title = 'Edit Profile';
    this.user = null;
    this.render();
    _UtilsDefault.default.pageIntroAnim();
    this.getUser();
  }
  async getUser() {
    try {
      this.user = await _UserAPIDefault.default.getUser(_AuthDefault.default.currentUser._id);
      this.render();
    } catch (err) {
      _ToastDefault.default.show(err, 'error');
    }
  }
  async updateProfileSubmitHandler(e) {
    e.preventDefault();
    const formData = e.detail.formData;
    const submitBtn = document.querySelector('.submit-btn');
    submitBtn.setAttribute('loading', '');
    try {
      const updatedUser = await _UserAPIDefault.default.updateUser(_AuthDefault.default.currentUser._id, formData);
      delete updatedUser.password;
      this.user = updatedUser;
      _AuthDefault.default.currentUser = updatedUser;
      this.render();
      _ToastDefault.default.show('profile updated');
    } catch (err) {
      _ToastDefault.default.show(err, 'error');
    }
    submitBtn.removeAttribute('loading');
  }
  render() {
    const template = _litHtml.html`
      <td-app-header title="Edit Profile" user=${JSON.stringify(_AuthDefault.default.currentUser)}></td-app-header>
      <div class="page-content">        
        ${this.user == null ? _litHtml.html`
          <sl-spinner></sl-spinner>
        ` : _litHtml.html`
          <p>Updated: ${_momentDefault.default(_AuthDefault.default.currentUser.updatedAt).format('MMMM Do YYYY, @ h:mm a')}</p>
          <sl-form class="page-form" @sl-submit=${this.updateProfileSubmitHandler.bind(this)}>
            <div class="input-group">
              <sl-input type="text" name="firstName" value="${this.user.firstName}" placeholder="First Name"></sl-input>
            </div>
            <div class="input-group">
              <sl-input type="text" name="lastName" value="${this.user.lastName}" placeholder="Last Name"></sl-input>
            </div>
            <div class="input-group">
              <sl-input type="text" name="email" value="${this.user.email}" placeholder="Email Address"></sl-input>
            </div> 
            <div class="input-group">
              <sl-textarea name="bio" rows="4" placeholder="Bio" value="${this.user.bio}"></sl-textarea>
            </div> 

            <div class="input-group">
              <label>Avatar</label><br>          
              ${this.user.avatar ? _litHtml.html`
                <sl-avatar image="${_AppDefault.default.apiBase}/images/${this.user.avatar}"></sl-avatar>
                <input type="file" name="avatar" />
              ` : _litHtml.html`
                <input type="file" name="avatar" />
              `}
            </div>
            <sl-button type="primary" class="submit-btn" submit>Update Profile</sl-button>
          </sl-form>
        `}
      </div>
    `;
    _litHtml.render(template, _AppDefault.default.rootEl);
  }
}
exports.default = new EditProfileView();
