var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _App = require('./App');
var _AppDefault = _parcelHelpers.interopDefault(_App);
require('./Auth');
require('./Toast');
class UserAPI {
  // userData if for a form only
  /*
  async updateUser(userId, userData){
  // validate
  if(!userId || !userData) return
  
  // make fetch request to backend
  const response = await fetch(`${App.apiBase}/user/${userId}`, {
  method: "PUT",
  headers: { "Authorization": `Bearer ${localStorage.accessToken}`},
  body: userData
  })
  
  // if response not ok
  if(!response.ok){
  // console log error
  const err = await response.json()
  if(err) console.log(err)
  // throw error (exit this function)
  throw new Error('Problem updating user')
  }
  
  // convert response payload into json - store as data
  const data = await response.json()
  
  // return data
  return data
  }*/
  async getUser(userId) {
    // validate
    if (!userId) return;
    // fetch the json data
    const response = await fetch(`${_AppDefault.default.apiBase}/user/${userId}`, {
      headers: {
        "Authorization": `Bearer ${localStorage.accessToken}`
      }
    });
    // if response not ok
    if (!response.ok) {
      // console log error
      const err = await response.json();
      if (err) console.log(err);
      // throw error (exit this function)
      throw new Error('Problem getting user');
    }
    // convert response payload into json - store as data
    const data = await response.json();
    // return data
    return data;
  }
  /*Insert code 8a paste 2 = for both form data and json data*/
  async updateUser(userId, userData, dataType = 'form') {
    // validate
    if (!userId || !userData) return;
    let responseHeader;
    // form data
    if (dataType == 'form') {
      // fetch response header normal (form data)
      responseHeader = {
        method: "PUT",
        headers: {
          "Authorization": `Bearer ${localStorage.accessToken}`
        },
        body: userData
      };
    } else if (dataType == 'json') {
      responseHeader = {
        method: "PUT",
        headers: {
          "Authorization": `Bearer ${localStorage.accessToken}`,
          "Content-Type": "application/json"
        },
        body: JSON.stringify(userData)
      };
    }
    // make fetch request to backend
    const response = await fetch(`${_AppDefault.default.apiBase}/user/${userId}`, responseHeader);
    // if response not ok
    if (!response.ok) {
      // console log error
      const err = await response.json();
      if (err) console.log(err);
      // throw error (exit this function)
      throw new Error('Problem updating user');
    }
    // convert response payload into json - store as data
    const data = await response.json();
    // return data
    return data;
  }
}
exports.default = new UserAPI();
